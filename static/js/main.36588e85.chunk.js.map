{"version":3,"sources":["components/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","App.tsx","Root.tsx","index.tsx"],"names":["HomePage","_jsx","className","children","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","_ref","person","name","slug","sex","Link","to","concat","classNames","PeoplePage","_useState","useState","_useState2","_slicedToArray","people","setPeople","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","selectedSlug","useParams","useEffect","catch","finally","_jsxs","_Fragment","length","map","born","died","motherName","fatherName","mother","find","mom","father","dad","NotFoundPage","App","getClass","isActive","role","NavLink","Outlet","Root","Router","Routes","Route","path","element","index","Navigate","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.36588e85.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PersonLink } from './PersonLink';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const { slug: selectedSlug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(false);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (<Loader />)}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !error && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && !error && !!people.length && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map((person) => {\n                  const {\n                    sex,\n                    born,\n                    died,\n                    motherName,\n                    fatherName,\n                    slug,\n                  } = person;\n\n                  const mother = people.find(mom => mom.name === motherName);\n                  const father = people.find(\n                    dad => dad.name === fatherName,\n                  );\n\n                  return (\n                    <tr\n                      key={slug}\n                      data-cy=\"person\"\n                      className={classNames('', {\n                        'has-background-warning': slug === selectedSlug,\n                      })}\n                    >\n                      <td>\n                        <PersonLink person={person} />\n                      </td>\n\n                      <td>{sex}</td>\n                      <td>{born}</td>\n                      <td>{died}</td>\n\n                      <td>\n                        {mother ? (\n                          <PersonLink person={mother} />\n                        )\n                          : motherName || '-'}\n                      </td>\n\n                      <td>\n                        <td>\n                          {father ? (\n                            <PersonLink person={father} />\n                          )\n                            : fatherName || '-'}\n                        </td>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './App.scss';\nimport classNames from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nexport const App = () => {\n  const getClass = ({ isActive }: { isActive: boolean }) => {\n    return classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink className={getClass} to=\"/\">\n              Home\n            </NavLink>\n\n            <NavLink\n              className={getClass}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { App } from './App';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n\n          <Route path=\"people\">\n            <Route path=\":slug?\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport { Root } from './Root';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}